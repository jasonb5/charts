name: auto-merge

on:
  pull_request:
    types:
      - labeled
    branches:
      - main
    paths:
      - 'charts/**'

jobs:
  changed-files:
    runs-on: ubuntu-latest
    name: Get changed Helm charts
    outputs:
      all_modified_files: ${{ steps.changed-files-yaml.outputs.all_modified_files }}
      head_ref: ${{ steps.issue-ref.outputs.head_ref }}
    if: ${{ github.event.label.name == 'merge' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Checkout PR
        id: issue-ref
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "head_ref=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          git checkout main
          echo "base_ref=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - name: Get all Helm charts that have changed
        id: changed-files-yaml
        uses: tj-actions/changed-files@v40.1.1
        with:
          dir_names: true
          dir_names_exclude_current_dir: true
          dir_names_max_depth: 1
          escape_json: false
          json: true
          path: 'charts/'
          files_ignore: |
            template/**
            common-test/**
          fetch_depth: 0
          base_sha: ${{ steps.issue-ref.outputs.base_ref }}
          sha: ${{ steps.issue-ref.outputs.head_ref }}
  update-charts:
    runs-on: ubuntu-latest
    name: Auto merge PR based on label
    needs: changed-files
    strategy:
      max-parallel: 1
      matrix:
        chart: ${{ fromJSON(needs.changed-files.outputs.all_modified_files) }}
    defaults:
      run:
        working-directory: ${{ format('charts/{0}', matrix.chart) }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup helm-docs
        uses: ./.github/actions/setup-helm-docs
      - uses: actions/setup-python@v5
      - name: Install tools
        run: |
          pip install -r ../../requirements.txt
      - name: Configure git
        run: |
          git config user.email ${{ github.actor }}@users.noreply.github.com
          git config user.name ${{ github.actor }}
      - name: Checkout PR branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh co ${{ github.event.number }}
      - name: Bump patch, update dependencies, and documents
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          make bump-patch ARGS="--non-interactive"

          make docs

          if [[ "${{ matrix.chart }}" == "common" ]];
          then
            helm dep update ../common-test
          fi

          git add ../../
          git commit -m "Updates ${{ matrix.chart }} docs and dependencies"
          git push -u origin ${{ github.head_ref }}
      - name: Remove merge label on failure
        if: ${{ failure() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.number && github.event.number || github.event.issue.pull_request.url }}
        run: |
          PR_NUM=${PR_URL##*/}
          gh pr edit $PR_NUM --remove-label merge --add-label merge-failed
  auto-merge:
    runs-on: ubuntu-latest
    name: Auto merge PR based on label
    needs: update-charts
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.changed-files.outputs.head_ref }}
      - name: Merge PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr merge ${{ github.event.number }} --delete-branch --merge
  release:
    runs-on: ubuntu-latest
    name: Release Helm charts
    needs: auto-merge
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "main"
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Install Helm
        uses: azure/setup-helm@v3
      - run: |
          helm repo add homelab https://jasonb5.github.io/charts
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          charts_dir: charts
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

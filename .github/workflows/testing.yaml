name: testing

on:
  pull_request:
    paths:
      - 'charts/**'

  issue_comment:
    types:
      - created

jobs:
  changed_files:
    runs-on: ubuntu-latest
    name: Get changed Helm charts
    outputs:
      all_modified_files: ${{ steps.changed-files-yaml.outputs.all_modified_files }}
    if: |
      github.event_name == 'pull_request' ||
      contains(github.event.comment.body, '/test')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Checkout PR
        id: issue_ref
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]];
          then
            git checkout ${{ github.base_ref }}
            echo "base_ref=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
            git checkout ${{ github.head_ref }}
            echo "head_ref=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          else
            echo "base_ref=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
            gh co ${{ github.event.issue.number }}
            echo "head_ref=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          fi
      - name: Get all Helm charts that have changed
        id: changed-files-yaml
        uses: tj-actions/changed-files@v40.1.1
        with:
          dir_names: true
          dir_names_exclude_current_dir: true
          dir_names_max_depth: 1
          escape_json: false
          json: true
          path: 'charts/'
          files_ignore: |
            template/**
            common-test/**
          fetch_depth: 0
          base_sha: ${{ steps.issue_ref.outputs.base_ref }}
          sha: ${{ steps.issue_ref.outputs.head_ref }}
  test_chart:
    runs-on: ubuntu-latest
    name: Test Helm chart
    needs: changed_files
    strategy:
      matrix:
        chart: ${{ fromJSON(needs.changed_files.outputs.all_modified_files) }}
    defaults:
      run:
        working-directory: ${{ format('charts/{0}', matrix.chart) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
      - name: Install Helm
        uses: azure/setup-helm@v3
      - name: Install k3s
        uses: debianmaster/actions-k3s@v1.0.5
        with:
          version: 'latest'
      - name: Install tools
        run: |
          helm plugin install https://github.com/helm-unittest/helm-unittest.git

          pip install requests
      - name: Lint Helm chart
        run: |
          make update-dep
          make lint
      - name: Unittest Helm chart
        run: |
          make test
      - name: Install helm chart
        if: ${{ ! contains(matrix.chart, 'common') }}
        run: |
          pip install selenium
          helm install --wait test .
          name=$(kubectl get pods -oname)
          port=$(cat values.yaml | yq '.service.ports.default.port')
          trap "killall kubectl" 0
          kubectl port-forward $name 8000:${port} &
          sleep 2
          python ../../scripts/check_url.py http://127.0.0.1:8000 --success 200
      - name: Remove needs-testing label on success
        if: ${{ success() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.number && github.event.number || github.event.issue.pull_request.url }}
        run: |
          PR_NUM=${PR_URL##*/}
          gh pr edit $PR_NUM --remove-label needs-testing

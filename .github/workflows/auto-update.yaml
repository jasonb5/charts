name: auto-update

on:
  schedule:
    - cron: '0 2 * * *'

  workflow_dispatch:

jobs:
  list_charts:
    runs-on: ubuntu-latest
    name: List charts
    outputs:
      charts: ${{ steps.list_charts.outputs.charts }}
    steps:
      - uses: actions/checkout@v4
      - id: list_charts
        run: |
          echo "charts=$(ls charts/ | grep -vE 'common(-test)?|template|Makefile' | jq --raw-input --slurp --compact-output 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  check_update:
    runs-on: ubuntu-latest
    name: Check for chart updates
    needs: list_charts
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
      pull-requests: write
    strategy:
      matrix:
        chart: ${{ fromJson(needs.list_charts.outputs.charts) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          path: main
      - name: Fix branch to target main
        working-directory: ./main
        run: |
          git fetch
          git reset --hard HEAD
          git checkout main
      - name: Check for container tag update
        id: check_chart
        run: |
          pip install semver requests tbump pyyaml

          pushd main/charts/${{ matrix.chart }}

          make update \
            GLOBAL="--log --log-level DEBUG" \
            ARGS="--in-place --token ${{secrets.GITHUB_TOKEN}}"

          new_version=`make version`

          popd

          pushd main/

          if [ -n "$(git diff --name-only charts/${{ matrix.chart }})" ]; then
            echo "new_version=${new_version}" >> $GITHUB_OUTPUT

            branch_name="updates_${{ matrix.chart }}_${new_version}"

            if [ -n "$(git branch -a | grep ${branch_name})" ]
            then
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              git checkout -b ${branch_name}

              echo "changed=true" >> $GITHUB_OUTPUT
              echo "branch_name=${branch_name}" >> $GITHUB_OUTPUT
            fi
          else
            echo "new_version=" >> $GITHUB_OUTPUT
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
      - name: Make new branch and create PR
        working-directory: ./main
        if: steps.check_chart.outputs.changed == 'true'
        run: |
          git config user.email ${{ github.actor }}@users.noreply.github.com
          git config user.name ${{ github.actor }}

          pushd charts/${{ matrix.chart }}

          make update-dep

          git add .
          git commit -m "Updates ${{ matrix.chart }} to ${{ steps.check_chart.outputs.new_version }}"
          git push -u origin ${{ steps.check_chart.outputs.branch_name }}

          gh pr create --fill --label needs-testing

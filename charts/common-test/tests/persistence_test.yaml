suite: test persistence
values:
  - values/common.yaml
templates:
  - app.yaml
chart:
  appVersion: 0.1.0
tests:
  - it: should use existingClaim
    set:
      workload: deployment

      persistence:
        data1:
          enabled: true
          type: pvc
          existingClaim: test-data
    asserts:
      - equal:
          path: spec.template.spec.volumes[0].persistentVolumeClaim.claimName
          value: test-data
        documentIndex: 0
      - hasDocuments:
          count: 2
  - it: should reference volume from initContainers
    set:
      workload: deployment

      initContainers:
        db:
          image:
            repository: mariadb
            tag: latest

          persistence:
            data1:
              enabled: true
              mountPath: /config

      persistence:
        data1:
          enabled: true
          type: configmap
    asserts:
      - equal:
          path: spec.template.spec.initContainers[0].volumeMounts
          value:
            - mountPath: /config
              name: data1
        documentIndex: 0
      - equal:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            - mountPath: /data1
              name: data1
        documentIndex: 0
      - equal:
          path: spec.template.spec.volumes
          value:
            - configMap:
                name: RELEASE-NAME-common-test-data1
              name: data1
        documentIndex: 0
      - hasDocuments:
          count: 2
  - it: should propagate initContainers volume
    set:
      workload: deployment

      initContainers:
        db:
          image:
            repository: mariadb
            tag: latest

          persistence:
            data1:
              enabled: true
              type: configmap
    asserts:
      - equal:
          path: spec.template.spec.initContainers[0].volumeMounts
          value:
            - mountPath: /data1
              name: data1
        documentIndex: 0
      - equal:
          path: spec.template.spec.volumes
          value:
            - configMap:
                name: RELEASE-NAME-common-test-data1
              name: data1
        documentIndex: 0
      - hasDocuments:
          count: 2
  - it: should reference volume from extraContainers
    set:
      workload: deployment

      extraContainers:
        db:
          image:
            repository: mariadb
            tag: latest

          persistence:
            data1:
              enabled: true
              mountPath: /config

      persistence:
        data1:
          enabled: true
          type: configmap
    asserts:
      - equal:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            - mountPath: /data1
              name: data1
        documentIndex: 0
      - equal:
          path: spec.template.spec.containers[1].volumeMounts
          value:
            - mountPath: /config
              name: data1
        documentIndex: 0
      - equal:
          path: spec.template.spec.volumes
          value:
            - configMap:
                name: RELEASE-NAME-common-test-data1
              name: data1
        documentIndex: 0
      - hasDocuments:
          count: 2
  - it: should propagate extraContainers volume
    set:
      workload: deployment

      extraContainers:
        db:
          image:
            repository: mariadb
            tag: latest

          persistence:
            data1:
              enabled: true
              type: configmap
    asserts:
      - equal:
          path: spec.template.spec.containers[1].volumeMounts
          value:
            - mountPath: /data1
              name: data1
        documentIndex: 0
      - equal:
          path: spec.template.spec.volumes
          value:
            - configMap:
                name: RELEASE-NAME-common-test-data1
              name: data1
        documentIndex: 0
      - hasDocuments:
          count: 2
  - it: should configure a secret
    set:
      workload: deployment

      persistence:
        default:
          enabled: true
          type: secret

        custom:
          enabled: true
          type: secret
          secretName: custom-secret
    asserts:
      - equal:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            - mountPath: /custom
              name: custom
            - mountPath: /default
              name: common-test
        documentIndex: 0
      - equal:
          path: spec.template.spec.volumes
          value:
            - secret:
                secretName: custom-secret
              name: custom
            - secret:
                secretName: RELEASE-NAME-common-test
              name: common-test
        documentIndex: 0
      - hasDocuments:
          count: 2
  - it: should configure a pvc
    set:
      workload: deployment

      persistence:
        default:
          enabled: true
          type: pvc
          size: 10Gi
          readOnly: true
    asserts:
      - equal:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            - mountPath: /default
              name: common-test
              readOnly: true
        documentIndex: 0
      - equal:
          path: spec.template.spec.volumes
          value:
            - persistentVolumeClaim:
                claimName: RELEASE-NAME-common-test
                readOnly: true
              name: common-test
        documentIndex: 0
      - equal:
          path: spec
          value:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
            volumeMode: Filesystem
        documentIndex: 2
      - hasDocuments:
          count: 3
  - it: should configure nfs
    set:
      workload: deployment

      persistence:
        default:
          enabled: true
          type: nfs
          server: 127.0.0.1
          path: /mnt/user/appdata
          readOnly: true
    asserts:
      - equal:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            - mountPath: /default
              name: common-test
              readOnly: true
        documentIndex: 0
      - equal:
          path: spec.template.spec.volumes
          value:
            - nfs:
                path: /mnt/user/appdata
                server: 127.0.0.1
                readOnly: true
              name: common-test
        documentIndex: 0
      - hasDocuments:
          count: 2
  - it: should configure a hostpath
    set:
      workload: deployment

      persistence:
        default:
          enabled: true
          type: hostpath
          path: /data
          mountType: CharDevice
    asserts:
      - equal:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            - mountPath: /default
              name: common-test
        documentIndex: 0
      - equal:
          path: spec.template.spec.volumes
          value:
            - hostPath:
                path: /data
                type: CharDevice
              name: common-test
        documentIndex: 0
      - hasDocuments:
          count: 2
  - it: should configure an emptydir
    set:
      workload: deployment

      persistence:
        default:
          enabled: true
          type: emptydir
    asserts:
      - equal:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            - mountPath: /default
              name: common-test
        documentIndex: 0
      - equal:
          path: spec.template.spec.volumes
          value:
            - emptyDir: {}
              name: common-test
        documentIndex: 0
      - hasDocuments:
          count: 2
  - it: should configur a configmap
    set:
      workload: deployment

      persistence:
        default:
          enabled: true
          type: configmap
        custom:
          enabled: true
          type: configmap
          configMapName: custom-secret
    asserts:
      - equal:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            - mountPath: /custom
              name: custom
            - mountPath: /default
              name: common-test
        documentIndex: 0
      - equal:
          path: spec.template.spec.volumes
          value:
            - configMap:
                name: custom-secret
              name: custom
            - configMap:
                name: RELEASE-NAME-common-test
              name: common-test
        documentIndex: 0
      - hasDocuments:
          count: 2
  - it: should overwrite default volumeMounts
    set:
      workload: deployment

      persistence:
        default:
          enabled: true
          type: configmap
          mountPath: /config
          mountPropagation: HostToContainer
          readOnly: true
          subPath: /custom_config
    asserts:
      - equal:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            - mountPath: /config
              mountPropagation: HostToContainer
              readOnly: true
              subPath: /custom_config
              name: common-test
        documentIndex: 0
      - equal:
          path: spec.template.spec.volumes
          value:
            - configMap:
                name: RELEASE-NAME-common-test
              name: common-test
        documentIndex: 0
      - hasDocuments:
          count: 2
  - it: should enable persistence
    set:
      workload: deployment

      persistence:
        default:
          enabled: true
          type: configmap
    asserts:
      - equal:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            - mountPath: /default
              name: common-test
        documentIndex: 0
      - equal:
          path: spec.template.spec.volumes
          value:
            - configMap:
                name: RELEASE-NAME-common-test
              name: common-test
        documentIndex: 0
      - hasDocuments:
          count: 2
  - it: should be disabled
    set:
      workload: deployment

      persistence:
        default:
          type: configmap
    asserts:
      - isNullOrEmpty:
          path: spec.template.spec.containers[0].volumeMounts
        documentIndex: 0
      - isNullOrEmpty:
          path: spec.template.spec.volumes
        documentIndex: 0
      - hasDocuments:
          count: 2

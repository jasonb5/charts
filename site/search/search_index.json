{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Helm Charts","text":""},{"location":"charts/common/","title":"common","text":"<p>A Helm chart for Kubernetes</p>"},{"location":"charts/common/#values","title":"Values","text":"Key Type Default Description workload string <code>nil</code> Workload can be cronjob, daemonset, deployment, job, pod, or statefulset. configmap object <code>nil</code> Map of ConfigMaps, these are not unique to the workload. secret object <code>nil</code> Map of Secrets, these are not unique to the workload. ingress object <code>nil</code> Map of ingress, these are specific to the workload. persistence object <code>nil</code> Map of persistence, these are specifi to the workload. annotations object <code>nil</code> Annotations for default workload. labels object <code>nil</code> Labels for default workload. extraWorkloads object <code>nil</code> Extra workloads to create. extraObjects object <code>nil</code> Extra objects to create. networkPolicy.enabled bool <code>false</code> Enable/disable NetworkPolicy. networkPolicy.disableDefaultEgress bool <code>false</code> Disable default egress rules. networkPolicy.disableDefaultIngress bool <code>false</code> Disable default ingress rules. networkPolicy.egress list <code>nil</code> Egress rules that will be merged with default rules. networkPolicy.ingress list <code>nil</code> Ingress rules that will be merged with default rules. concurrencyPolicy string <code>nil</code> CronJob concurrency policy failedJobHistoryLimit string <code>nil</code> CronJob job history schedule string <code>nil</code> CronJob schedule startingDeadlineSeconds string <code>nil</code> CronJob starting deadline successfulJobHistoryLimit string <code>nil</code> CronJob job history timeZone string <code>nil</code> CronJob time zone jobActiveDeadlineSeconds string <code>nil</code> Job active deadline backoffLimit string <code>nil</code> Job backoff limit backoffLimitPerIndex string <code>nil</code> Job backoff limit per index completionMode string <code>nil</code> Job completion mode completions string <code>nil</code> Job completions maxFailedIndexes string <code>nil</code> Job max failed indexes parallelism string <code>nil</code> Job parallelism podFailurePolicy string <code>nil</code> Job pod failure policy podReplacementPolicy string <code>nil</code> Job pod replacement policy ttlSecondsAfterFinished string <code>nil</code> Job ttl seconds after finished minReadySeconds string <code>nil</code> Deployment, DaemonSet, StatefulSet min ready seconds progressDeadlineSeconds string <code>nil</code> Deployment, DaemonSet, StatefulSet progress deadline seconds replicas int <code>1</code> Deployment, DaemonSet, StatefulSet number of pod replicas revisionHistoryLimit string <code>nil</code> Deployment, DaemonSet, StatefulSet revision history limit strategy object <code>{\"type\":\"Recreate\"}</code> Deployment, DaemonSet, StatefulSet strategy updateStrategy object <code>{\"type\":\"OnDelete\"}</code> StatefulSets, DaemonSet update strategy ordinals string <code>nil</code> StatefulSets ordinals persistentVolumeClaimRetentionPolicy string <code>nil</code> StatefulSets persistent volume claim retention policy podManagementPolicy string <code>nil</code> StatefulSets pod management policy serviceName string <code>nil</code> StatefulSets service name volumeClaimTemplates string <code>nil</code> StatefulSets volume claim templates activeDeadlineSeconds string <code>nil</code> Pod active deadline seconds affinity string <code>nil</code> Pod affinity dnsConfig string <code>nil</code> Pod dns config dnsPolicy string <code>nil</code> Pod dns policy hostAliases string <code>nil</code> Pod host aliases hostIPC string <code>nil</code> Pod pass through host IPC hostNetwork string <code>nil</code> Pod pass through host network hostPID string <code>nil</code> Pod pass through host PID hostUsers string <code>nil</code> Pod pass through host users hostname string <code>nil</code> Pod hostname initContainers string <code>nil</code> Pod init containers extraContainers string <code>nil</code> Pod extra containers to include with the default container nodeName string <code>nil</code> Pod nodeName nodeSelector string <code>nil</code> Pod node selector preemptionPolicy string <code>nil</code> Pod preemption policy priority string <code>nil</code> Pod priority priorityClassName string <code>nil</code> Pod priority class name podRestartPolicy string <code>nil</code> Pod restart poliyc runtimeClassName string <code>nil</code> Pod runtime class name podSecurityContext string <code>nil</code> Pod security context serviceAccount string <code>nil</code> Pod service account terminationGracePeriodSeconds string <code>nil</code> Pod termination grace period seconds tolerations string <code>nil</code> Pod tolerations args string <code>nil</code> Container args command string <code>nil</code> Container command env string <code>nil</code> Container env envFrom string <code>nil</code> Container envFrom image.repository string <code>nil</code> Container repository image.tag string <code>nil</code> Container tag image.pullSecrets string <code>nil</code> Container pullSecrets image.pullPolicy string <code>nil</code> Cotnainer pullPolicy lifecycle string <code>nil</code> Container lifecycle livenessProbe string <code>nil</code> Container livenessProbe readinessProbe string <code>nil</code> Container readinessProbe resources string <code>nil</code> Container resources restartPolicy string <code>nil</code> Container restartPolicy securityContext string <code>nil</code> Container security context startupProbe string <code>nil</code> Container startupProbe workingDir string <code>nil</code> Container working directory <p>Autogenerated from chart metadata using helm-docs v1.11.0</p>"},{"location":"guide/common-library/","title":"Common library","text":"<p>This Helm library chart is used to build application charts.</p> <p>Everything in the <code>values.yaml</code> is defined as a map, where the key is the name of the Kubernetes resource. There can only be a single <code>default</code> key, any other key will be appended to the default resource name, e.g. <code>config</code> would be appended as <code>-config</code> to the default name.</p>"},{"location":"guide/common-library/#workload","title":"Workload","text":"<p>Workload can be set to <code>deployment</code>, <code>statefulset</code>, <code>daemonset</code>, <code>job</code>, or <code>cronjob</code>.</p> <pre><code>workload: deployment\n</code></pre>"},{"location":"guide/common-library/#no-workload","title":"No Workload","text":"<p>If workload is not defined then no default workload is generated. This can be useful to create any top-level objects e.g. <code>configmap</code>, <code>secret</code>, or <code>extraObjects</code>.</p>"},{"location":"guide/common-library/#configmap","title":"ConfigMap","text":"<p>ConfigMaps are defined in a map, where each key is a separate ConfigMap. The following example would create two ConfigMap objects. The values of the ConfigMap keys can be templates to reference other resource definitions.</p> <pre><code>configmap:\n  default:\n    CONFIG_PATH: /config\n  app:\n    PORT: \"{{ .Values.service.ports.default.port }}\"\n</code></pre>"},{"location":"guide/common-library/#reference-configmap","title":"Reference ConfigMap","text":"<p>To reference a ConfigMap in the default container using <code>envFrom</code> you simply use the key of the ConfigMap.</p> <pre><code>envFrom:\n  default:\n    type: configmap\n</code></pre> <p>This works for containers defined in <code>extraContainers</code> as well.</p> <pre><code>extraContainers:\n  sidecar:\n    envFrom:\n      default:\n        type: configmap\n</code></pre>"},{"location":"guide/common-library/#secret","title":"Secret","text":"<p>Secrets like ConfigMaps are defined in a map, where each key is a separate Secret. The following example would create two Secret objects. The values of the Secret keys can be templates to reference other resource definitions.</p> <pre><code>secret:\n  default:\n    PASSWORD: abcd1234\n  app:\n    DB_PASSWORD: 1234\n</code></pre>"},{"location":"guide/common-library/#reference-secret","title":"Reference Secret","text":"<p>To reference a Secret in the default container using <code>envFrom</code> you simply use the key of the Secret.</p> <pre><code>envFrom:\n  default:\n    type: secret\n</code></pre> <p>This works for containers defined in <code>extraContainers</code> as well.</p> <pre><code>extraContainers:\n  sidecar:\n    envFrom:\n      default:\n        type: secret\n</code></pre>"},{"location":"guide/common-library/#persistence","title":"Persistence","text":"<p>Persistence is defined as a map, the key can be used to reference the storage. The <code>type</code> can be <code>configmap</code>, <code>emptydir</code>, <code>hostpath</code>, <code>nfs</code>, <code>pvc</code>, or <code>secret</code>.</p> <pre><code>persistence:\n  config:\n    type: emptydir\n  data:\n    type: nfs\n    server: 192.168.0.1\n    path: /mnt/user/appdata\n</code></pre>"},{"location":"guide/common-library/#service","title":"Service","text":"<p>Each workload has a single service. Each key under <code>ports</code> references a single port of the default container.</p> <pre><code>service:\n  ports:\n    default:\n      port: 80\n    https:\n      port: 443\n</code></pre>"},{"location":"guide/common-library/#ingress","title":"Ingress","text":"<p>Each workload has a single ingress, which is disabled by default. Each key under <code>hosts</code> references a service and the value describes the ingress for the service. A service must have atleast one path. If a <code>host</code> key is not present under a <code>service</code> then the ingress will match any host for that service.</p> <pre><code>ingress:\n  enabled: true\n  hosts:\n    default: {} # Will use the default path `/`\n    https:\n      host: domain.io\n      paths:\n      - path: /home\n        pathType: Prefix\n</code></pre>"},{"location":"guide/common-library/#tls","title":"TLS","text":"<p>If the <code>tls</code> key under <code>ingress</code> is present then it's value will be the secret name containing the certs. The <code>hosts</code> key under <code>tls</code> will be auto populated with any hosts that are defined.</p> <pre><code>ingress:\n  enabled: true\n  hosts:\n    https:\n      host: domain.io\n      paths:\n      - path: /home\n  tls: tls-certs\n</code></pre>"},{"location":"guide/common-library/#network-policy","title":"Network Policy","text":"<p>The network policy is disabled by default. Once enabled the default policy will add ingress rules for each service port and allows all egress traffic. Custom egress and ingress rules can be added to <code>egress</code> and <code>ingress</code> keys, these will be merged with the default rules. The default rules can be disabled with <code>disableDefaultEgress</code> and <code>disableDefaultIngress</code>.</p> <pre><code>networkPolicy:\n  enabled: true\n  disableDefaultEgress: false\n  disableDefaultIngress: false\n  egress:\n  ingress:\n</code></pre>"},{"location":"guide/getting-started/","title":"Getting Started","text":"<p>This repository provides many homelab related Helm charts. There is a common library designed to simplify creating new Helm charts.</p>"},{"location":"guide/getting-started/#adding-chart-repository","title":"Adding chart repository","text":"<p>To install the Helm charts provided by this repository you'll need to install Helm and add this repository.</p> <pre><code>helm repo add homelab https://jasonb5.github.io/charts\n</code></pre>"},{"location":"guide/getting-started/#list-charts","title":"List charts","text":"<p>List the charts available in the repository.</p> <pre><code>helm search repo homelab\n</code></pre>"},{"location":"guide/getting-started/#install-a-chart","title":"Install a chart","text":"<p>A Helm chart can be install with the following command.</p> <pre><code>helm install homelab/&lt;chart name&gt; --generate-name\n</code></pre>"},{"location":"guide/getting-started/#creating-a-new-chart","title":"Creating a new chart","text":"<p>A copier template is provided to create new Helm charts. The template uses the common library to build the chart. It also provides scaffolding for common dependencies e.g. Redis, MariaDB, and PostgreSQL.</p> <pre><code>pip install copier\n\nmake new-chart\n</code></pre>"}]}